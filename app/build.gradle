plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'io.objectbox'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.evp.payment.evpksher"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 24
        versionName "1.0.24"
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "BUILD_TIME", "\"" + getBuildTime() + "\"")

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "EVPKSher"
            def signatureVersion = ""
            def date = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+07"))
            if (variant.buildType.name.equals('debug')) {
                outputFileName = "${appName}-Debug-${date}-V${versionName}.apk"
            }
            if (variant.buildType.name.equals('release')) {
//                if (signingConfigs.release.v1SigningEnabled) {
//                    signatureVersion = "V1"
//                }
//                if (signingConfigs.release.v2SigningEnabled) {
//                    signatureVersion += "V2"
//                }
                signatureVersion = "V1"
                outputFileName = "${appName}-Release-${date}-${signatureVersion}-V${versionName}.apk"
            }

            // Save mapping file.
            if (variant.getBuildType().isMinifyEnabled()) {
                variant.assemble.doLast {
                    copy {
                        from variant.mappingFile
                        into "${projectDir}/mappings"
                        rename { String fileName ->
                            "mapping-V${versionName}.txt"
                        }
                    }
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
//        dataBinding true
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    androidExtensions {
        experimental = true
    }

}

dependencies {
    implementation project(path: ':ksher-sdk')
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':appstore')
    implementation project(':eos')

    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.0'
//    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
//    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    // Gson
    implementation "com.google.code.gson:gson:2.8.6"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.0'

    // Koin
    implementation "org.koin:koin-android:2.1.6"
    implementation "org.koin:koin-androidx-scope:2.1.6"
    implementation "org.koin:koin-androidx-viewmodel:2.1.6"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // KTX
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //DB     // RxJava extension support for objectBox database
//    implementation "io.objectbox:objectbox-kotlin:2.3.4"
    implementation 'io.objectbox:objectbox-rxjava:2.3.4'
//    debugImplementation "io.objectbox:objectbox-android-objectbrowser:2.9.1"

    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0-RC1'

    // Immersion bar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'

    implementation 'android.arch.paging:runtime:1.0.1'
    implementation 'android.arch.paging:rxjava2:1.0.1'



    // RxJava lifecycle management
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:1.0.0'

    // Memory leak analysis
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // Scan code
    implementation(name: 'scancode-v1.0.4', ext: 'aar')
    implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.4'
    implementation 'com.google.zxing:core:3.4.0'

    // Logger
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
}

static def getBuildTime() {
    return new Date().format("yyyy-MM-dd HH:mm", TimeZone.getTimeZone("GMT+07"))
}